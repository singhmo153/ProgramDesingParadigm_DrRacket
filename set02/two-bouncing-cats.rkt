#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 6187 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 184
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname two-bounc"
 #"ing-cats) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #("
 #"#t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 21 #";; two bouncing cats."
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; like two draggable cat, but the cats can move in any of the cardi"
 #"nal"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; directions (north, east, west, south) and a cat moving in any dir"
 #"ection"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; bounces smoothly off the edge of the canvas even when it is dragg"
 #"ed to"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; the edges."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; two draggable cats."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; like draggable cat, but there are two cats.  They are individuall"
 #"y"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; draggable.  But space pauses or unpauses the entire system."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; draggable cat."
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; like falling cat, but user can drag the cat with the mouse."
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; button-down to select, drag to move, button-up to release."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; falling cat."
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; A cat falls from the top of the scene."
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; The user can pause/unpause the cat with the space bar."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; start with (main 0)"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 13 #"cat-selected?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 10 #"cat-north?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 10 #"cat-south?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 9 #"cat-east?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 9 #"cat-west?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; MAIN FUNCTION."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; main : Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; GIVEN: the initial y-position of the cats"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; EFFECT: runs the simulation, starting with the cats falling"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; RETURNS: the final state of the world"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; (main 0) = starts simulation and returns final state of the world"
 #","
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; similar to this:"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; (make-world (make-cat 109 73 false \"south\") "
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;             ("
0 0 17 3 8 #"make-cat"
0 0 17 3 1 #" "
0 0 17 3 3 #"365"
0 0 17 3 1 #" "
0 6          10 17 6 #"683/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 15 #" false \"east\") "
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;             false)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 11 #"initial-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"initial-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 14 #"world-to-scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"on-mouse"
0 0 24 3 1 #" "
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"cat.png\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; how fast the cat falls, in pixels/tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; dimensions of the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; image of empty canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"EMPTY-CANVAS"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; x-coordinate of cat1 and cat2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"CANVAS-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; y-coordinate of cat1 and cat2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"CANVAS-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; boundaries of canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; dimensions of the cat"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #"  "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;; DATA DEFINITIONS ;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; A Direction is one of"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; -- \"north\" Interpretation: north represents the direction towar"
 #"ds the top "
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";;                            boundary of the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; -- \"south\" Interpretation: south represents the direction towar"
 #"ds the bottom"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";;                            boundary of the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; -- \"east\"  Interpretation: east represents the direction toward"
 #"s the right"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";;                            boundary of the canvas"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; -- \"west\"  Interpretation: west represents the direction toward"
 #"s the left"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";;                            boundary of the canvas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; direction-fn : Direction -> ??"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(define (direction-fn direction)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";    [(string=? direction \"north\") ...]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";    [(string=? direction \"south\") ...]"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";    [(string=? direction \"east\") ...]"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";    [(string=? direction \"west\") ...]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cat1"
0 0 24 3 1 #" "
0 0 14 3 4 #"cat2"
0 0 24 3 1 #" "
0 0 14 3 7 #"paused?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; A World is a (make-world Cat Cat Boolean)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; cat1 and cat2 are the two bouncing cats"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; paused? describes whether or not the world is paused"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; world-fn : World -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; (define (world-fn w)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;   (... (world-cat1 w) (world-cat2 w) (world-paused? w)))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";(define paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";  (make-world"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";   selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";   unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";   true))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"cat"
0 0 24 3 2 #" ("
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; A Cat is a (make-cat Real Real Boolean)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; INTERPRETATION: "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; x-pos, y-pos give the position of the cat's centre. "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; selected?, describes whether or not the cat is selected "
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; by the button down Mouse Event."
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; dir, describes the direction in which the cat is moving."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; cat-fn : Cat -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;(define (cat-fn c)"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; (... (cat-x-pos w) (cat-y-pos w) (cat-selected? w)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; EXAMPLE: refer test examples below"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; examples of cats moving north, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-north-at-70"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-north-at-62"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat2-north-at-70"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; examples of cats moving south, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-south-at-78"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"78"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-south-at-70"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; examples of cats moving east, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-east-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-east-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-east-at-108"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"108"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; examples of cats moving west, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-west-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-west-at-100"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 26 #"unselected-cat1-west-at-92"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 2 #"92"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; examples of selected cat at boundary, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 31 #"cat1-selected-at-north-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 31 #"cat2-selected-at-south-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 30 #"cat1-selected-at-east-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 30 #"cat2-selected-at-west-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; examples of selected cat after bouncing, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 44 #"cat1-selected-at-north-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 44 #"cat2-selected-at-south-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 43 #"cat1-selected-at-east-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 43 #"cat2-selected-at-west-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 2 #"  "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; examples of unselected cat at boundary, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 33 #"cat1-unselected-at-north-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 33 #"cat2-unselected-at-south-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 32 #"cat1-unselected-at-east-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 32 #"cat2-unselected-at-west-boundary"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;example of unselected initial-cat before bouncing, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 39 #"cat1-unselected-at-top-initial-position"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; examples of unselected cat after bouncing, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 46 #"cat1-unselected-at-north-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 46 #"cat2-unselected-at-south-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 45 #"cat1-unselected-at-east-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 45 #"cat2-unselected-at-west-boundary-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT2-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;example of unselected initial-cat after bouncing, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 52 #"cat1-unselected-at-top-initial-position-after-bounce"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; examples of worlds, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"unpaused-world-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-south-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; in an unpaused world, the unselected cat falls, but the selected"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; cat stays pinned to the mouse."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 32 #"unpaused-world-at-100-after-tick"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-south-at-78"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; example MouseEvents for testing:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"button-down-event"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"drag-event"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"button-up-event"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"other-event"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"enter\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;; END DATA DEFINITIONS ;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; initial-world : Integer -> World"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; GIVEN: a y-coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: a world with two unselected cats, spaced evenly across t"
 #"he"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";; canvas in the x-direction, and falling, and placed at the given y"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; coordinate."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; (initial-world 0) = (make-world (make-cat CAT1-X-COORD TOP false "
 #"\"south\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;                                 (make-cat CAT1-X-COORD TOP false "
 #"\"south\")"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;                                 false))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TEST:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"initial-world"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"world"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"two"
0 0 19 3 16 #" unselected cats"
0 0 19 3 1 #" "
0 0 19 3 2 #"at"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"initial"
0 0 19 3 1 #" "
0 0 19 3 8 #"position"
0 0 19 3 1 #","
0 0 19 29 1 #"\n"
0 0 19 3 67
#"    and the direction of movement of both the cats should be south\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; world-after-tick : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a world w"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; RETURNS: the world that should follow w after a tick."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; (world-after-tick unpaused-world-at-100) = unpaused-world-at-100-"
 #"after-tick"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; the position of selected cat will not change, however the positio"
 #"n of "
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";; unselected cat changes. refer tests for further examples."
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; STRATEGY: structural decomposition on w : World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 29 #"\"the world should not change\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"world-after-tick"
0 0 24 3 1 #" "
0 0 14 3 20 #"unpaused-world-at-70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-south-at-78"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 8 #"unpaused"
0 0 19 3 1 #" "
0 0 19 3 5 #"world"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 4 #"move"
0 0 19 3 1 #" "
0 0 19 3 4 #"with"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"CATSPEED"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 5 #"while"
0 0 19 29 1 #"\n"
0 0 19 3 39 #"   the selected cat will remain pinned\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cat-after-tick : Cat -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a cat c"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the state of the given cat after a tick if it were in an"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; unpaused world."
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; EXAMPLE: (cat-after-tick unselected-cat2-south-at-70)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; = unselected-cat2-south-at-78. refer tests for further examples"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY: structural decomposition on c : Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"cat-after-tick-new-location"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 13 #"cat-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; cat-after-tick-new-location : Real Real Boolean Direction-> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the "
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; cat is supposed to move."
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: the cat that should follow one in the given position in "
 #"an"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; unpaused world "
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; EXAMPLE: (cat-after-tick selected-cat1-north-at-100)"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; = slected-cat1-north-at-100."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; the position of a selected cat which is not being "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; dragged"
0 0 17 3 1 #" "
0 0 17 3 4 #"will"
0 0 17 3 1 #" "
0 0 17 3 22 #"not change after tick."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"cat-after-tick-new-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 18 #"cat-inside-canvas?"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 15 #"cat-at-boundary"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 17 #"toggled-direction"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 27 #"cat-after-tick-not-selected"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TEST:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 60
#";; the position of a selected cat will not change after tick"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"cat-after-tick-new-location"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 6 #"center"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 10 #"positioned"
0 0 19 3 1 #" "
0 0 19 3 2 #"at"
0 0 19 3 1 #" "
0 0 19 3 3 #"200"
0 0 19 3 1 #","
0 0 19 3 3 #"100"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 29 1 #"\n"
0 0 19 3 18 #"    will be south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; cat-inside-canvas? : Real Real -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; GIVEN: x and y coordinates of the cat's centre"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; RETURNS: true iff the cat's centre lies within the boundaries of"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; the canvas."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (cat-inside-canvas? 200 200) = true"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (cat-inside-canvas?) 800 800) = false"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"cat-inside-canvas?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 4 #"LEFT"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 3 #"TOP"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TEST: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 37 #";; 200 200 is point inside the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 18 #"cat-inside-canvas?"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 26 #"\"the value should be true\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; toggled-direction : Direction -> Direction"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN: a direction"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS: a direction after turning 180 degrees from the given dir"
 #"ection "
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (toggled-direction \"north\") = \"south\""
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; STRATEGY: structural decomposition on direction : Direction"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"toggled-direction"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"west\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"east\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TEST:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 17 #"toggled-direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 7 #"\"south\""
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 33 #" be south after 180 degrees turn\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; cat-at-boundary : Real Real Boolean Direction -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the "
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";; cat is moving"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; RETURNS: the cat that should follow after bouncing off the edge."
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"cat-at-boundary"
0 0 24 3 2 #"  "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 45 #";;checks whether cat is at the right boundary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 40 #";;checks whether cat is at left boundary"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 4 #"LEFT"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 42 #";;checks whether cat is at bottom boundary"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-dir"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 33 #";; the cat is at the top boundary"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-dir"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 29 #";; cat is at the top boundary"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"cat-at-boundary"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 36 #" will bounce in inside the boundary\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 32 #";; cat is at the bottom boundary"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"cat-at-boundary"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 36 #" will bounce in inside the boundary\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; cat-after-tick-not-selected: Real Real Boolean Direction -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the "
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";; cat is moving"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: the cat that should follow one in the given position in "
 #"an"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; unpaused world."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; EXAMPLES: refer test for example"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"cat-after-tick-not-selected"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 72
(
 #";; checks whether the cat is outside the top boundary(initial condit"
 #"ion)"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 49 #";; the cat bounces inside the boundary after tick"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 41 #"cat-after-tick-not-selected-inside-canvas"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 5 #"x-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 3 #")  "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 41 #"cat-after-tick-not-selected-inside-canvas"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"y-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TEST: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 30 #";; cat1 is at the top boundary"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"cat-after-tick-not-selected"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 41 #"cat-after-tick-not-selected-inside-canvas"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 42 #" repositioned after bouncing off the edge\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; cat-after-tick-not-selected-inside-canvas: "
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; Real"
0 0 17 3 1 #" "
0 0 17 3 4 #"Real"
0 0 17 3 1 #" "
0 0 17 3 24 #"Boolean Direction -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the "
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";; cat is moving"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURNS: the unselected cat inside canvas that should follow one "
 #"in the"
) 0 0 24 29 1 #"\n"
0 0 17 3 8 #";; given"
0 0 17 3 31 #" position in an unpaused world."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; EXAMPLES: refer test for example"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; STRATEGY: structural decomposition on direction: Direction"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 41 #"cat-after-tick-not-selected-inside-canvas"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 27 #"cat-after-tick-moving-north"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 27 #"cat-after-tick-moving-south"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 26 #"cat-after-tick-moving-east"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 26 #"cat-after-tick-moving-west"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TESTS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 41 #"cat-after-tick-not-selected-inside-canvas"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 40 #" moves with CATSPEED in north direction\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; cat-after-tick-moving-north: Real Real Boolean Direction-> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the "
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; cat is moving."
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS: the unselected cat that should follow one in the given p"
 #"osition"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; in an unpaused world.if the cat touches the north boundary then t"
 #"he "
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; direction of"
0 0 17 3 1 #" "
0 0 17 3 8 #"movement"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 24 #"reversed by 180 degrees."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; EXAMPLES: refer test for example"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"cat-after-tick-moving-north"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 49 #";; check whether cat is crossing the top boundary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 3 #"TOP"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; TESTS: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"cat-after-tick-moving-north"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 40 #" moves with CATSPEED in north direction\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; cat-after-tick-moving-south: Real Real Boolean Direction-> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; GIVEN: a position, a value for selected?, and direction in which "
 #"the"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; cat is moving."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; RETURNS: the unselected cat that should follow one in the given p"
 #"osition "
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; in an unpaused world. if the cat touches the south boundary then "
 #"the"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; direction of movement is reversed by 180 degrees."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLES: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"cat-after-tick-moving-south"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";;check whether cat is crossing the bottom boundary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 6 #"BOTTOM"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; TESTS: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"cat-after-tick-moving-south"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 40 #" moves with CATSPEED in south direction\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; cat-after-tick-moving-east: Real Real Boolean Direction-> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; GIVEN: a position, a value for selected?, direction in which the "
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; cat is moving, a boundary value, and one of the dimension of cat'"
 #"s image"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS: the unselected cat that should follow one in the given p"
 #"osition"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; in an unpaused world. if the cat touches the east boundary then t"
 #"he "
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; direction of movement is reversed by 180 degrees."
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; EXAMPLE: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"cat-after-tick-moving-east"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; check whether cat is crossing the right boundary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #") "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TEST:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 26 #"cat-after-tick-moving-east"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 39 #" moves with CATSPEED in east direction\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; cat-after-tick-moving-west: Real Real Boolean Direction -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; GIVEN: a position, a value for selected?, direction in which the "
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; cat is moving."
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS: the unselected cat that should follow one in the given p"
 #"osition"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; in an unpaused world. if the cat touches the west boundary then t"
 #"he "
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; direction of movement is reversed by 180 degrees."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLE: refer test below."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"cat-after-tick-moving-west"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 50 #";; check whether cat is crossing the left boundary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; TEST:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 26 #"cat-after-tick-moving-west"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 14 3 8 #"CATSPEED"
0 0 24 3 2 #") "
0 0 14 3 12 #"CAT1-Y-COORD"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 38 #" move with CATSPEED in west direction\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; tests:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 35 #" remain at its position after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-north-at-70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat1-north-at-62"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 9 #"unelected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"move"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"north"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 29 #"    with CATSPEED after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 35 #" remain at its position after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-south-at-70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-south-at-78"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"move"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"south"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 5 #"with "
0 0 19 29 1 #"\n"
0 0 19 3 25 #"     CATSPEED after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-east-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 25 #"selected-cat1-east-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 35 #" remain at its position after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-east-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 27 #"unselected-cat2-east-at-108"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"move"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"east"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 5 #"with "
0 0 19 29 1 #"\n"
0 0 19 3 25 #"     CATSPEED after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-west-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 25 #"selected-cat1-west-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 35 #" remain at its position after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-west-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 26 #"unselected-cat1-west-at-92"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 10 #"unselected"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"move"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"west"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 5 #"with "
0 0 19 29 1 #"\n"
0 0 19 3 25 #"     CATSPEED after tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 31 #"cat1-selected-at-north-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 44 #"cat1-selected-at-north-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"north"
0 0 19 3 1 #" "
0 0 19 3 8 #"boundary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 13 #"    direction"
0 0 19 3 33 #" should be chnged by 180 degrees\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 31 #"cat2-selected-at-south-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 44 #"cat2-selected-at-south-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"south"
0 0 19 3 1 #" "
0 0 19 3 8 #"boundary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 13 #"    direction"
0 0 19 3 34 #" should be changed by 180 degrees\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 30 #"cat1-selected-at-east-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 43 #"cat1-selected-at-east-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"east"
0 0 19 3 1 #" "
0 0 19 3 8 #"boundary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 4 #"the "
0 0 19 29 1 #"\n"
0 0 19 3 13 #"    direction"
0 0 19 3 34 #" should be changed by 180 degrees\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 30 #"cat2-selected-at-west-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 43 #"cat2-selected-at-west-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"west"
0 0 19 3 1 #" "
0 0 19 3 8 #"boundary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 13 #"    direction"
0 0 19 3 34 #" should be changed by 180 degrees\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 33 #"cat1-unselected-at-north-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 46 #"cat1-unselected-at-north-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"north"
0 0 19 3 1 #" "
0 0 19 3 7 #"boudary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 6 #"start "
0 0 19 29 1 #"\n"
0 0 19 3 31 #"    moving south with CATSPPED\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 33 #"cat2-unselected-at-south-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 46 #"cat2-unselected-at-south-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"south"
0 0 19 3 1 #" "
0 0 19 3 7 #"boudary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 6 #"start "
0 0 19 29 1 #"\n"
0 0 19 3 31 #"    moving north with CATSPEED\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 32 #"cat1-unselected-at-east-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 45 #"cat1-unselected-at-east-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"east"
0 0 19 3 1 #" "
0 0 19 3 7 #"boudary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 5 #"start"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 30 #"    moving west with CATSPPED\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 32 #"cat2-unselected-at-west-boundary"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 45 #"cat2-unselected-at-west-boundary-after-bounce"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"bounce"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"west"
0 0 19 3 1 #" "
0 0 19 3 7 #"boudary"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 5 #"start"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 30 #"    moving east with CATSPPED\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"cat-after-tick"
0 0 24 3 1 #" "
0 0 14 3 39 #"cat1-unselected-at-top-initial-position"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 52 #"cat1-unselected-at-top-initial-position-after-bounce"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 61
#"\"the cat should bounce off the top boundary after first tick\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; world-to-scene : World -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a world"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; RETURNS: a Scene that portrays the given world."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; EXAMPLE: refer tests for example         "
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; STRATEGY: structural decomposition on w : World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-to-scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"place-cat"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"place-cat"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 12 #"EMPTY-CANVAS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; place-cat : Cat Scene -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GIVEN: a cat and a scene"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: a scene like the given one, but with the given cat paint"
 #"ed"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; on it."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLE: refer test below."
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY: structural decomposition on c : Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"place-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;example of image, for testing."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 28 #"image-of-paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 9 #"CAT-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 12 #"EMPTY-CANVAS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"world-to-scene"
0 0 24 3 1 #" "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 28 #"image-of-paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 64
#"\"(world-to-scene paused-world-at-100) returned unexpected value\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; world-after-key-event : World KeyEvent -> World"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a world w"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; RETURNS: the world that should follow the given world"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; after the given key event."
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; on space, toggle paused?, up, down, right, left-- ignore all othe"
 #"rs"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; STRATEGY: cases on kev : KeyEvent"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 25 #"world-with-paused-toggled"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 28 #"world-with-direction-changed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 28 #"world-with-direction-changed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 28 #"world-with-direction-changed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"kev"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 28 #"world-with-direction-changed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; world-with-paused-toggled : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a world w"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; RETURNS: a world just like the given one, but with paused? toggle"
 #"d"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; EXAMPLES: refer tests below."
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; STRATEGY: structural decomposition on w : World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"world-with-paused-toggled"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; TESTS: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; examples KeyEvents for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"pause-key-event"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"other-key-event"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 3 1 #" "
0 0 14 3 15 #"pause-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"after"
0 0 19 3 1 #" "
0 0 19 3 5 #"pause"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 1 #","
0 0 19 3 39 #" a paused world should become unpaused\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 3 1 #" "
0 0 14 3 15 #"pause-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"after"
0 0 19 3 1 #" "
0 0 19 3 5 #"pause"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 1 #","
0 0 19 3 40 #" an unpaused world should become paused\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 3 1 #" "
0 0 14 3 15 #"other-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 19 #"paused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"after"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 9 #"non-pause"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 1 #","
0 0 19 3 36 #" a paused world should be unchanged\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 3 1 #" "
0 0 14 3 15 #"other-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"after"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 9 #"non-pause"
0 0 19 3 1 #" "
0 0 19 3 3 #"key"
0 0 19 3 1 #","
0 0 19 3 39 #" an unpaused world should be unchanged\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; world-with-direction-changed : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a world w"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURNS: a world just like the given one, but with change in dire"
 #"ction"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; of movement of the selected cat"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLES: refer tests beow"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; STRATEGY: structural decomposition on w : World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"world-with-direction-changed"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 26 #"cat-after-direction-change"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 26 #"cat-after-direction-change"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; cat-after-direction-changed : Cat -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a cat c"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; RETURNS: a cat just like the given one, but with change in direct"
 #"ion"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; of movement of the selected cat"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY: structural decomposition on c : Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"cat-after-direction-change"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 35 #"selected-cat-after-direction-change"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 13 #"cat-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; selected-cat-after-direction-change : "
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; Real"
0 0 17 3 1 #" "
0 0 17 3 4 #"Real"
0 0 17 3 1 #" "
0 0 17 3 7 #"Boolean"
0 0 17 3 1 #" "
0 0 17 3 9 #"Direction"
0 0 17 3 19 #" Direction -> World"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; GIVEN: x, y position of cat, value for selected, original directi"
 #"on"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";; and new direction"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; RETURNS: a cat, with the given position but with change in direct"
 #"ion"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; of movement of the selected cat. if the cat is not selected then "
 #"direction"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; is same as the original."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLES:refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; STRATEGY: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 35 #"selected-cat-after-direction-change"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"selected?"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; examples of cat, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 44 #"selected-cat1-moving-north-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 43 #"selected-cat2-moving-east-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #"  "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 43 #"selected-cat2-moving-west-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #"  "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 45 #"unselected-cat2-moving-west-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #"  "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; examples of world, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 30 #"world-after-up-down-arrow-keys"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 44 #"selected-cat1-moving-north-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 33 #"world-after-right-left-arrow-keys"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 43 #"selected-cat2-moving-east-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 43 #"selected-cat2-moving-west-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 48 #"world-after-up-down-arrow-keys-on-unselected-cat"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 45 #"unselected-cat2-moving-west-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; examples of key event, for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"up-key-event"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"down-key-event"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"right-key-event"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"left-key-event"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; TESTS: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 30 #"world-after-up-down-arrow-keys"
0 0 24 3 1 #" "
0 0 14 3 12 #"up-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 44 #"selected-cat1-moving-north-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 44 #"selected-cat1-moving-north-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat1"
0 0 19 3 1 #" "
0 0 19 3 6 #"moving"
0 0 19 3 1 #" "
0 0 19 3 5 #"south"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 31 #"    should be changed to north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 30 #"world-after-up-down-arrow-keys"
0 0 24 3 1 #" "
0 0 14 3 14 #"down-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat1"
0 0 19 3 1 #" "
0 0 19 3 6 #"moving"
0 0 19 3 1 #" "
0 0 19 3 5 #"north"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 4 #" be "
0 0 19 29 1 #"\n"
0 0 19 3 21 #"    changed to south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 33 #"world-after-right-left-arrow-keys"
0 0 24 3 1 #" "
0 0 14 3 15 #"right-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 43 #"selected-cat2-moving-east-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 43 #"selected-cat2-moving-east-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat2"
0 0 19 3 1 #" "
0 0 19 3 6 #"moving"
0 0 19 3 1 #" "
0 0 19 3 4 #"west"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 4 #" be "
0 0 19 29 1 #"\n"
0 0 19 3 20 #"    changed to east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 14 3 33 #"world-after-right-left-arrow-keys"
0 0 24 3 1 #" "
0 0 14 3 14 #"left-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 43 #"selected-cat2-moving-west-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 43 #"selected-cat2-moving-west-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat2"
0 0 19 3 1 #" "
0 0 19 3 6 #"moving"
0 0 19 3 32 #" east should be changed to west\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"world-after-key-event"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 48 #"world-after-up-down-arrow-keys-on-unselected-cat"
0 0 24 3 1 #" "
0 0 14 3 14 #"down-key-event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 45 #"unselected-cat2-moving-west-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 44 #"selected-cat1-moving-south-arrow-key-pressed"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"direction"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 38 #" unselected cat should not be cahnged\""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; world-after-mouse-event : World Integer Integer MouseEvent -> Wor"
 #"ld"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; GIVEN: a world and a description of a mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; RETURNS: the world that should follow the given mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; STRATEGY: structural decomposition on w: World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"cat-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat1"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"cat-after-mouse-event"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cat2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"world-paused?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; cat-after-mouse-event : Cat Integer Integer MouseEvent -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; GIVEN: a cat and a description of a mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; RETURNS: the cat that should follow the given mouse event"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; strategy: cases on mev : MouseEvent"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"cat-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 3 #") ("
0 0 14 3 21 #"cat-after-button-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"drag\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"cat-after-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 7 #"mouse=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mev"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 3 #") ("
0 0 14 3 19 #"cat-after-button-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 2 #"mx"
0 0 24 3 1 #" "
0 0 14 3 2 #"my"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #"])) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; cat-after-button-down : Cat Integer Integer -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; GIVEN: a cat and location of the mouse pointer"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: the cat following a button-down at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLES: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; STRATEGY: structural decomposition on c: Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"cat-after-button-down"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-cat?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; in-cat? : Cat Integer Integer -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; GIVEN: a cat and location of the mouse pointer"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS true iff the given coordinate is inside the bounding box "
 #"of"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; the given cat."
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; EXAMPLES: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY: structural decomposition on c : Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-cat?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 14 #"HALF-CAT-WIDTH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 15 #"HALF-CAT-HEIGHT"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; cat-after-drag : Cat Integer Integer -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; GIVEN: a cat and location of the mouse pointer"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; RETURNS: the cat following a drag at the given location."
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; EXAMPLE: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; STRATEGY: structural decomposition on c: Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cat-after-drag"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cat-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 7 #"))     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; TESTS: tests follow help functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; cat-after-button-up : Cat Integer Integer -> Cat"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; GIVEN: a cat and location of the mouse pointer"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURNS: the cat following a button-up at the given location"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; EXAMPLE: refer test below"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; STRATEGY: structural decomposition on c: Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"cat-after-button-up"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cat-selected?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-x-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 9 #"cat-y-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 15 #";; button-down:"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 26 #";; button-down inside cat1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 2 #"90"
0 0 24 3 4 #"    "
0 0 17 3 27 #";; a coordinate inside cat1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 6 #"button"
0 0 19 3 1 #" "
0 0 19 3 4 #"down"
0 0 19 3 1 #" "
0 0 19 3 6 #"inside"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat1"
0 0 19 3 29 #" should select it but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 26 #";; button-down inside cat2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT2-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 2 #"65"
0 0 24 3 4 #"    "
0 0 17 3 27 #";; a coordinate inside cat2"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 25 #"selected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 6 #"button"
0 0 19 3 1 #" "
0 0 19 3 4 #"down"
0 0 19 3 1 #" "
0 0 19 3 6 #"inside"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat2"
0 0 19 3 29 #" should select it but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 33 #";; button-down not inside any cat"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 4 #"    "
0 0 17 3 39 #";; a coordinate not inside cat1 or cat2"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 13 #"\"button-down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 6 #"button"
0 0 19 3 1 #" "
0 0 19 3 4 #"down"
0 0 19 3 1 #" "
0 0 19 3 7 #"outside"
0 0 19 3 1 #" "
0 0 19 3 3 #"any"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 34 #"leave world unchanged, but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 17 #";; tests for drag"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";; no cats selected: drag should not change anything"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; a large motion"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 4 #"drag"
0 0 19 3 1 #" "
0 0 19 3 4 #"with"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 3 #"cat"
0 0 19 3 39 #" selected didn't leave world unchanged\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";; cat1 selected"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; a large motion"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 4 #"drag"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat1"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 27 #"just move cat1, but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";; cat2 selected"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; a large motion"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 6 #"\"drag\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"make-cat"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 4 #"drag"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 4 #"cat2"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 8 #"selected"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 27 #"just move cat2, but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 22 #";; tests for button-up"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 39 #";; button-up always unselects both cats"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";; unselect cat1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 25 #"selected-cat1-west-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 21 #";; arbitrary location"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat1-west-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 35 #"\"button-up failed to unselect cat1\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";; unselect cat2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 25 #"selected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 21 #";; arbitrary location"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 35 #"\"button-up failed to unselect cat2\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 16 #";; unselect cat2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 21 #";; arbitrary location"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 11 #"\"button-up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 44 #"\"button-up with two unselected cats failed.\""
0 0 24 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 31 #";; tests for other mouse events"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"world-after-mouse-event"
0 0 24 3 1 #" "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"CAT1-X-COORD"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #"    "
0 0 17 3 23 #";; arbitrary coordinate"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 6 #"\"move\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 21 #"unpaused-world-at-100"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"other"
0 0 19 3 1 #" "
0 0 19 3 5 #"mouse"
0 0 19 3 1 #" "
0 0 19 3 6 #"events"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 5 #"leave"
0 0 19 3 1 #" "
0 0 19 3 32 #"the world unchanged, but didn't\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cat-north? : Cat -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cat-east?  : Cat -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cat-south? : Cat -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cat-west?  : Cat -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a Cat c"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; RETURNS: true iff c is travelling in the specified direction."
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; STRATEGY: structural decomposition on c: Cat"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cat-north?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"is-north?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-east?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"is-east?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cat-south?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"is-south?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cat-west?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"is-west?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cat-dir"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; is-north? : Direction -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; is-east?  : Direction -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; is-south? : Direction -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; is-west?  : Direction -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN: a direction"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS: true iff direction is same as the specified direction."
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; EXAMPLES: refer tests below"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; STRATEGY: structural decomposition on direction: Direction"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"is-north?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"north\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"is-east?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"east\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"is-south?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"south\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"is-west?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"west\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; direction of cat is not dependent upon whether it is selected or "
 #"not"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"cat-north?"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-north-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 28 #" direction of cat1 is north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"cat-north?"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-north-at-70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 28 #" direction of cat2 is north\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"cat-south?"
0 0 24 3 1 #" "
0 0 14 3 26 #"selected-cat1-south-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 28 #" direction of cat1 is south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"cat-south?"
0 0 24 3 1 #" "
0 0 14 3 28 #"unselected-cat1-south-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 28 #" direction of cat2 is south\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-east?"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-east-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 27 #" direction of cat1 is east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-east?"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat2-east-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 27 #" direction of cat2 is east\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-west?"
0 0 24 3 1 #" "
0 0 14 3 25 #"selected-cat1-west-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 27 #" direction of cat1 is west\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"cat-west?"
0 0 24 3 1 #" "
0 0 14 3 27 #"unselected-cat1-west-at-100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"value"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"true"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 27 #" direction of cat2 is west\""
0 0 24 3 2 #"))"
0           0
